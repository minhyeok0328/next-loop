#플랫폼, 도커이미지 버전 명시 파일
version: '3.8'
services:
  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.8.0
    platform: linux/amd64
    container_name: kafka-exporter 
    command:
      - "--kafka.server=10.178.0.3:9092"  # 클러스터구축 → 1번 브로커만 남겨둠
      
    ports:
      - "9308:9308"  # Prometheus가 스크랩할 Kafka Exporter의 포트
    networks:
      - kafka_network 

# monitoring 서버에 node-exporter를 설치할 필요는 없을 것 같아서 일단 주석처리
# node-exporter:
#     image: prom/node-exporter:v1.8.1
#     container_name: node-exporter-monitoring
#     restart: unless-stopped
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /:/rootfs:ro
#     command:
#       - '--path.procfs=/host/proc'
#       - '--path.rootfs=/rootfs'
#       - '--path.sysfs=/host/sys'
#       - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
#       - '--web.listen-address=:9102' # 로컬에서는 포트가 달라야 함.  
#     ports:
#       - "9102:9102"  # 로컬에서는 포트가 달라야 함. 

  prometheus:
    image: prom/prometheus:v2.54.1 
    platform: linux/amd64
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus 설정 파일 마운트
      - prometheus-storage:/prometheus  # Prometheus 데이터를 저장할 볼륨
    depends_on:
      - kafka-exporter
    networks:
      - kafka_network
      
  grafana:
    image: grafana/grafana:11.0.6
    platform: linux/amd64
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    restart: always
    networks:
      - kafka_network

volumes:
  prometheus-storage:
  grafana-storage:

networks:
  kafka_network:
    name: kafka_network
    driver: bridge